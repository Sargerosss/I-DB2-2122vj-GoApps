Concept:
- Go code *zou* een bericht naar wens moeten sturen naar de serial monitor
- De arduino neemt het dan over door het te lezen en de arduino code opgegeven uit te voeren

Probleem:
- Er wordt niks gestuurd naar de serial monitor (en er kan dus niks worden gelezen)

Geprobeerd:
- Aanpassingen in Go code (verschillende packages, verschillende berichten gestuurd)
- Aanpassingen in Arduino code (niet checken of hetgeen wat wij sturen binnenkomt maar of er IETS binnenkomt)

Debugging (Go code):
- Elke stap in Go code hebben we gecontroleerd met een print, alles wordt elke keer uitgevoerd

Meeste voortgang:
- Wat rare tekens in de serial monitor, maar die stap waren we al snel kwijt door weer nieuwe pogingen.

Arduino code:
- De arduino code is vergeleken met mijn eerdere projecten, waarvan ik weet dat het op die manier werkt
- Ik heb exact dezelfde stappen gezet daar als die ik nu heb gezet.
(Ook gecontroleerd of het LED lampje wel aan kan gaan door de Arduino Code, en dit werkte)


REDDIT POST
I couldn't get this to work at all in go-serial, but it sort of works in go.bug.st/serial.v1

I have to call serial.Read() after I call serial.Write(). 
It seems the library only buffers, but doesn't send until you read? 
Also, serial.Read() sends CRLF if called and there's nothing to receive. 
That's a WTF -- why does Serial.Read() -- an input function -- send anything? 
Certainly better than go-serial, which blocks the thread indefinitely if no data received...

Wat dit betekent:
Je moet dus als je iets wilt sturen, ook een Read callen, dus om output te krijgen, moet dat via input?!?

https://www.reddit.com/r/golang/comments/cu6ipj/goserial_vs_arduino_serial_monitor/exs3whu/ (Reddit post)

Prof v1: Blijft vasthangen na "sturen"
Prof v2: Doet niks
Prof v3: Zelfde als v1, enkel geen for loop